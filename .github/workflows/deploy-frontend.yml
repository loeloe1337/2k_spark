name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build with Next.js
        run: |
          cd frontend
          echo "Building with API URL: $NEXT_PUBLIC_API_URL"
          npm run build
          # Create .nojekyll file to disable Jekyll processing
          touch out/.nojekyll
          # Create a copy of index.html as 404.html for SPA routing
          cp out/index.html out/404.html
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'https://2k-spark-backend.onrender.com' }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./frontend/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
